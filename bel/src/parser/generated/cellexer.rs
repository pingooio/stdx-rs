// Generated from /Users/asnaps/src/github.com/clarkmcc/cel-rust/antlr/src/gen/CEL.g4 by ANTLR 4.8
#![allow(dead_code)]
#![allow(nonstandard_style)]
#![allow(unused_imports)]
#![allow(unused_variables)]
use std::{
    cell::RefCell,
    marker::PhantomData,
    ops::{Deref, DerefMut},
    rc::Rc,
    sync::Arc,
};

use antlr4rust::{
    PredictionContextCache, Tid, TidAble, TidExt, TokenSource,
    atn::ATN,
    atn_deserializer::ATNDeserializer,
    char_stream::CharStream,
    dfa::DFA,
    error_listener::ErrorListener,
    int_stream::IntStream,
    lazy_static,
    lexer::{BaseLexer, Lexer, LexerRecog},
    lexer_atn_simulator::{ILexerATNSimulator, LexerATNSimulator},
    parser_rule_context::{BaseParserRuleContext, ParserRuleContext, cast},
    recognizer::{Actions, Recognizer},
    rule_context::{BaseRuleContext, EmptyContext, EmptyCustomRuleContext},
    token::*,
    token_factory::{CommonTokenFactory, TokenAware, TokenFactory},
    vocabulary::{Vocabulary, VocabularyImpl},
};

pub const EQUALS: isize = 1;
pub const NOT_EQUALS: isize = 2;
pub const IN: isize = 3;
pub const LESS: isize = 4;
pub const LESS_EQUALS: isize = 5;
pub const GREATER_EQUALS: isize = 6;
pub const GREATER: isize = 7;
pub const LOGICAL_AND: isize = 8;
pub const LOGICAL_OR: isize = 9;
pub const LBRACKET: isize = 10;
pub const RPRACKET: isize = 11;
pub const LBRACE: isize = 12;
pub const RBRACE: isize = 13;
pub const LPAREN: isize = 14;
pub const RPAREN: isize = 15;
pub const DOT: isize = 16;
pub const COMMA: isize = 17;
pub const MINUS: isize = 18;
pub const EXCLAM: isize = 19;
pub const QUESTIONMARK: isize = 20;
pub const COLON: isize = 21;
pub const PLUS: isize = 22;
pub const STAR: isize = 23;
pub const SLASH: isize = 24;
pub const PERCENT: isize = 25;
pub const CEL_TRUE: isize = 26;
pub const CEL_FALSE: isize = 27;
pub const NUL: isize = 28;
pub const WHITESPACE: isize = 29;
pub const COMMENT: isize = 30;
pub const NUM_FLOAT: isize = 31;
pub const NUM_INT: isize = 32;
pub const NUM_UINT: isize = 33;
pub const STRING: isize = 34;
pub const BYTES: isize = 35;
pub const IDENTIFIER: isize = 36;
pub const ESC_IDENTIFIER: isize = 37;
pub const channelNames: [&str; 2] = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN"];

pub const modeNames: [&str; 1] = ["DEFAULT_MODE"];

pub const ruleNames: [&str; 48] = [
    "EQUALS",
    "NOT_EQUALS",
    "IN",
    "LESS",
    "LESS_EQUALS",
    "GREATER_EQUALS",
    "GREATER",
    "LOGICAL_AND",
    "LOGICAL_OR",
    "LBRACKET",
    "RPRACKET",
    "LBRACE",
    "RBRACE",
    "LPAREN",
    "RPAREN",
    "DOT",
    "COMMA",
    "MINUS",
    "EXCLAM",
    "QUESTIONMARK",
    "COLON",
    "PLUS",
    "STAR",
    "SLASH",
    "PERCENT",
    "CEL_TRUE",
    "CEL_FALSE",
    "NUL",
    "BACKSLASH",
    "LETTER",
    "DIGIT",
    "EXPONENT",
    "HEXDIGIT",
    "RAW",
    "ESC_SEQ",
    "ESC_CHAR_SEQ",
    "ESC_OCT_SEQ",
    "ESC_BYTE_SEQ",
    "ESC_UNI_SEQ",
    "WHITESPACE",
    "COMMENT",
    "NUM_FLOAT",
    "NUM_INT",
    "NUM_UINT",
    "STRING",
    "BYTES",
    "IDENTIFIER",
    "ESC_IDENTIFIER",
];

pub const _LITERAL_NAMES: [Option<&'static str>; 29] = [
    None,
    Some("'=='"),
    Some("'!='"),
    Some("'in'"),
    Some("'<'"),
    Some("'<='"),
    Some("'>='"),
    Some("'>'"),
    Some("'&&'"),
    Some("'||'"),
    Some("'['"),
    Some("']'"),
    Some("'{'"),
    Some("'}'"),
    Some("'('"),
    Some("')'"),
    Some("'.'"),
    Some("','"),
    Some("'-'"),
    Some("'!'"),
    Some("'?'"),
    Some("':'"),
    Some("'+'"),
    Some("'*'"),
    Some("'/'"),
    Some("'%'"),
    Some("'true'"),
    Some("'false'"),
    Some("'null'"),
];
pub const _SYMBOLIC_NAMES: [Option<&'static str>; 38] = [
    None,
    Some("EQUALS"),
    Some("NOT_EQUALS"),
    Some("IN"),
    Some("LESS"),
    Some("LESS_EQUALS"),
    Some("GREATER_EQUALS"),
    Some("GREATER"),
    Some("LOGICAL_AND"),
    Some("LOGICAL_OR"),
    Some("LBRACKET"),
    Some("RPRACKET"),
    Some("LBRACE"),
    Some("RBRACE"),
    Some("LPAREN"),
    Some("RPAREN"),
    Some("DOT"),
    Some("COMMA"),
    Some("MINUS"),
    Some("EXCLAM"),
    Some("QUESTIONMARK"),
    Some("COLON"),
    Some("PLUS"),
    Some("STAR"),
    Some("SLASH"),
    Some("PERCENT"),
    Some("CEL_TRUE"),
    Some("CEL_FALSE"),
    Some("NUL"),
    Some("WHITESPACE"),
    Some("COMMENT"),
    Some("NUM_FLOAT"),
    Some("NUM_INT"),
    Some("NUM_UINT"),
    Some("STRING"),
    Some("BYTES"),
    Some("IDENTIFIER"),
    Some("ESC_IDENTIFIER"),
];
lazy_static! {
    static ref _shared_context_cache: Arc<PredictionContextCache> = Arc::new(PredictionContextCache::new());
    static ref VOCABULARY: Box<dyn Vocabulary> =
        Box::new(VocabularyImpl::new(_LITERAL_NAMES.iter(), _SYMBOLIC_NAMES.iter(), None));
}

pub type LexerContext<'input> = BaseRuleContext<'input, EmptyCustomRuleContext<'input, LocalTokenFactory<'input>>>;
pub type LocalTokenFactory<'input> = CommonTokenFactory;

type From<'a> = <LocalTokenFactory<'a> as TokenFactory<'a>>::From;

pub struct CELLexer<'input, Input: CharStream<From<'input>>> {
    base: BaseLexer<'input, CELLexerActions, Input, LocalTokenFactory<'input>>,
}

antlr4rust::tid! { impl<'input,Input> TidAble<'input> for CELLexer<'input,Input> where Input:CharStream<From<'input> > }

impl<'input, Input: CharStream<From<'input>>> Deref for CELLexer<'input, Input> {
    type Target = BaseLexer<'input, CELLexerActions, Input, LocalTokenFactory<'input>>;

    fn deref(&self) -> &Self::Target {
        &self.base
    }
}

impl<'input, Input: CharStream<From<'input>>> DerefMut for CELLexer<'input, Input> {
    fn deref_mut(&mut self) -> &mut Self::Target {
        &mut self.base
    }
}

impl<'input, Input: CharStream<From<'input>>> CELLexer<'input, Input> {
    fn get_rule_names(&self) -> &'static [&'static str] {
        &ruleNames
    }
    fn get_literal_names(&self) -> &[Option<&str>] {
        &_LITERAL_NAMES
    }

    fn get_symbolic_names(&self) -> &[Option<&str>] {
        &_SYMBOLIC_NAMES
    }

    fn get_grammar_file_name(&self) -> &'static str {
        "CELLexer.g4"
    }

    pub fn new_with_token_factory(input: Input, tf: &'input LocalTokenFactory<'input>) -> Self {
        antlr4rust::recognizer::check_version("0", "3");
        Self {
            base: BaseLexer::new_base_lexer(
                input,
                LexerATNSimulator::new_lexer_atnsimulator(
                    _ATN.clone(),
                    _decision_to_DFA.clone(),
                    _shared_context_cache.clone(),
                ),
                CELLexerActions {},
                tf,
            ),
        }
    }
}

impl<'input, Input: CharStream<From<'input>>> CELLexer<'input, Input>
where
    &'input LocalTokenFactory<'input>: Default,
{
    pub fn new(input: Input) -> Self {
        CELLexer::new_with_token_factory(input, <&LocalTokenFactory<'input> as Default>::default())
    }
}

pub struct CELLexerActions {}

impl CELLexerActions {}

impl<'input, Input: CharStream<From<'input>>>
    Actions<'input, BaseLexer<'input, CELLexerActions, Input, LocalTokenFactory<'input>>> for CELLexerActions
{
}

impl<'input, Input: CharStream<From<'input>>> CELLexer<'input, Input> {}

impl<'input, Input: CharStream<From<'input>>>
    LexerRecog<'input, BaseLexer<'input, CELLexerActions, Input, LocalTokenFactory<'input>>> for CELLexerActions
{
}
impl<'input> TokenAware<'input> for CELLexerActions {
    type TF = LocalTokenFactory<'input>;
}

impl<'input, Input: CharStream<From<'input>>> TokenSource<'input> for CELLexer<'input, Input> {
    type TF = LocalTokenFactory<'input>;

    fn next_token(&mut self) -> <Self::TF as TokenFactory<'input>>::Tok {
        self.base.next_token()
    }

    fn get_line(&self) -> isize {
        self.base.get_line()
    }

    fn get_char_position_in_line(&self) -> isize {
        self.base.get_char_position_in_line()
    }

    fn get_input_stream(&mut self) -> Option<&mut dyn IntStream> {
        self.base.get_input_stream()
    }

    fn get_source_name(&self) -> String {
        self.base.get_source_name()
    }

    fn get_token_factory(&self) -> &'input Self::TF {
        self.base.get_token_factory()
    }
}

lazy_static! {
    static ref _ATN: Arc<ATN> = Arc::new(ATNDeserializer::new(None).deserialize(_serializedATN.chars()));
    static ref _decision_to_DFA: Arc<Vec<antlr4rust::RwLock<DFA>>> = {
        let mut dfa = Vec::new();
        let size = _ATN.decision_to_state.len();
        for i in 0..size {
            dfa.push(DFA::new(_ATN.clone(), _ATN.get_decision_state(i), i as isize).into())
        }
        Arc::new(dfa)
    };
}

const _serializedATN: &str = "\x03\u{608b}\u{a72a}\u{8133}\u{b9ed}\u{417c}\u{3be7}\u{7786}\u{5964}\x02\
		\x27\u{1b5}\x08\x01\x04\x02\x09\x02\x04\x03\x09\x03\x04\x04\x09\x04\x04\
		\x05\x09\x05\x04\x06\x09\x06\x04\x07\x09\x07\x04\x08\x09\x08\x04\x09\x09\
		\x09\x04\x0a\x09\x0a\x04\x0b\x09\x0b\x04\x0c\x09\x0c\x04\x0d\x09\x0d\x04\
		\x0e\x09\x0e\x04\x0f\x09\x0f\x04\x10\x09\x10\x04\x11\x09\x11\x04\x12\x09\
		\x12\x04\x13\x09\x13\x04\x14\x09\x14\x04\x15\x09\x15\x04\x16\x09\x16\x04\
		\x17\x09\x17\x04\x18\x09\x18\x04\x19\x09\x19\x04\x1a\x09\x1a\x04\x1b\x09\
		\x1b\x04\x1c\x09\x1c\x04\x1d\x09\x1d\x04\x1e\x09\x1e\x04\x1f\x09\x1f\x04\
		\x20\x09\x20\x04\x21\x09\x21\x04\x22\x09\x22\x04\x23\x09\x23\x04\x24\x09\
		\x24\x04\x25\x09\x25\x04\x26\x09\x26\x04\x27\x09\x27\x04\x28\x09\x28\x04\
		\x29\x09\x29\x04\x2a\x09\x2a\x04\x2b\x09\x2b\x04\x2c\x09\x2c\x04\x2d\x09\
		\x2d\x04\x2e\x09\x2e\x04\x2f\x09\x2f\x04\x30\x09\x30\x04\x31\x09\x31\x03\
		\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\
		\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x08\x03\
		\x08\x03\x09\x03\x09\x03\x09\x03\x0a\x03\x0a\x03\x0a\x03\x0b\x03\x0b\x03\
		\x0c\x03\x0c\x03\x0d\x03\x0d\x03\x0e\x03\x0e\x03\x0f\x03\x0f\x03\x10\x03\
		\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\
		\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\
		\x19\x03\x1a\x03\x1a\x03\x1b\x03\x1b\x03\x1b\x03\x1b\x03\x1b\x03\x1c\x03\
		\x1c\x03\x1c\x03\x1c\x03\x1c\x03\x1c\x03\x1d\x03\x1d\x03\x1d\x03\x1d\x03\
		\x1d\x03\x1e\x03\x1e\x03\x1f\x03\x1f\x03\x20\x03\x20\x03\x21\x03\x21\x05\
		\x21\u{b5}\x0a\x21\x03\x21\x06\x21\u{b8}\x0a\x21\x0d\x21\x0e\x21\u{b9}\
		\x03\x22\x03\x22\x03\x23\x03\x23\x03\x24\x03\x24\x03\x24\x03\x24\x05\x24\
		\u{c4}\x0a\x24\x03\x25\x03\x25\x03\x25\x03\x26\x03\x26\x03\x26\x03\x26\
		\x03\x26\x03\x27\x03\x27\x03\x27\x03\x27\x03\x27\x03\x28\x03\x28\x03\x28\
		\x03\x28\x03\x28\x03\x28\x03\x28\x03\x28\x03\x28\x03\x28\x03\x28\x03\x28\
		\x03\x28\x03\x28\x03\x28\x03\x28\x03\x28\x03\x28\x05\x28\u{e5}\x0a\x28\
		\x03\x29\x06\x29\u{e8}\x0a\x29\x0d\x29\x0e\x29\u{e9}\x03\x29\x03\x29\x03\
		\x2a\x03\x2a\x03\x2a\x03\x2a\x07\x2a\u{f2}\x0a\x2a\x0c\x2a\x0e\x2a\u{f5}\
		\x0b\x2a\x03\x2a\x03\x2a\x03\x2b\x06\x2b\u{fa}\x0a\x2b\x0d\x2b\x0e\x2b\
		\u{fb}\x03\x2b\x03\x2b\x06\x2b\u{100}\x0a\x2b\x0d\x2b\x0e\x2b\u{101}\x03\
		\x2b\x05\x2b\u{105}\x0a\x2b\x03\x2b\x06\x2b\u{108}\x0a\x2b\x0d\x2b\x0e\
		\x2b\u{109}\x03\x2b\x03\x2b\x03\x2b\x03\x2b\x06\x2b\u{110}\x0a\x2b\x0d\
		\x2b\x0e\x2b\u{111}\x03\x2b\x05\x2b\u{115}\x0a\x2b\x05\x2b\u{117}\x0a\x2b\
		\x03\x2c\x06\x2c\u{11a}\x0a\x2c\x0d\x2c\x0e\x2c\u{11b}\x03\x2c\x03\x2c\
		\x03\x2c\x03\x2c\x06\x2c\u{122}\x0a\x2c\x0d\x2c\x0e\x2c\u{123}\x05\x2c\
		\u{126}\x0a\x2c\x03\x2d\x06\x2d\u{129}\x0a\x2d\x0d\x2d\x0e\x2d\u{12a}\x03\
		\x2d\x03\x2d\x03\x2d\x03\x2d\x03\x2d\x03\x2d\x06\x2d\u{133}\x0a\x2d\x0d\
		\x2d\x0e\x2d\u{134}\x03\x2d\x03\x2d\x05\x2d\u{139}\x0a\x2d\x03\x2e\x03\
		\x2e\x03\x2e\x07\x2e\u{13e}\x0a\x2e\x0c\x2e\x0e\x2e\u{141}\x0b\x2e\x03\
		\x2e\x03\x2e\x03\x2e\x03\x2e\x07\x2e\u{147}\x0a\x2e\x0c\x2e\x0e\x2e\u{14a}\
		\x0b\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x07\x2e\
		\u{153}\x0a\x2e\x0c\x2e\x0e\x2e\u{156}\x0b\x2e\x03\x2e\x03\x2e\x03\x2e\
		\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x07\x2e\u{161}\x0a\x2e\
		\x0c\x2e\x0e\x2e\u{164}\x0b\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\
		\x03\x2e\x07\x2e\u{16c}\x0a\x2e\x0c\x2e\x0e\x2e\u{16f}\x0b\x2e\x03\x2e\
		\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x07\x2e\u{176}\x0a\x2e\x0c\x2e\x0e\x2e\
		\u{179}\x0b\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\
		\x03\x2e\x07\x2e\u{183}\x0a\x2e\x0c\x2e\x0e\x2e\u{186}\x0b\x2e\x03\x2e\
		\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\
		\x07\x2e\u{192}\x0a\x2e\x0c\x2e\x0e\x2e\u{195}\x0b\x2e\x03\x2e\x03\x2e\
		\x03\x2e\x03\x2e\x05\x2e\u{19b}\x0a\x2e\x03\x2f\x03\x2f\x03\x2f\x03\x30\
		\x03\x30\x05\x30\u{1a2}\x0a\x30\x03\x30\x03\x30\x03\x30\x07\x30\u{1a7}\
		\x0a\x30\x0c\x30\x0e\x30\u{1aa}\x0b\x30\x03\x31\x03\x31\x03\x31\x03\x31\
		\x06\x31\u{1b0}\x0a\x31\x0d\x31\x0e\x31\u{1b1}\x03\x31\x03\x31\x06\u{154}\
		\u{162}\u{184}\u{193}\x02\x32\x03\x03\x05\x04\x07\x05\x09\x06\x0b\x07\x0d\
		\x08\x0f\x09\x11\x0a\x13\x0b\x15\x0c\x17\x0d\x19\x0e\x1b\x0f\x1d\x10\x1f\
		\x11\x21\x12\x23\x13\x25\x14\x27\x15\x29\x16\x2b\x17\x2d\x18\x2f\x19\x31\
		\x1a\x33\x1b\x35\x1c\x37\x1d\x39\x1e\x3b\x02\x3d\x02\x3f\x02\x41\x02\x43\
		\x02\x45\x02\x47\x02\x49\x02\x4b\x02\x4d\x02\x4f\x02\x51\x1f\x53\x20\x55\
		\x21\x57\x22\x59\x23\x5b\x24\x5d\x25\x5f\x26\x61\x27\x03\x02\x13\x04\x02\
		\x43\x5c\x63\x7c\x04\x02\x47\x47\x67\x67\x04\x02\x2d\x2d\x2f\x2f\x05\x02\
		\x32\x3b\x43\x48\x63\x68\x04\x02\x54\x54\x74\x74\x0c\x02\x24\x24\x29\x29\
		\x41\x41\x5e\x5e\x62\x64\x68\x68\x70\x70\x74\x74\x76\x76\x78\x78\x04\x02\
		\x5a\x5a\x7a\x7a\x05\x02\x0b\x0c\x0e\x0f\x22\x22\x03\x02\x0c\x0c\x04\x02\
		\x57\x57\x77\x77\x06\x02\x0c\x0c\x0f\x0f\x24\x24\x5e\x5e\x06\x02\x0c\x0c\
		\x0f\x0f\x29\x29\x5e\x5e\x03\x02\x5e\x5e\x05\x02\x0c\x0c\x0f\x0f\x24\x24\
		\x05\x02\x0c\x0c\x0f\x0f\x29\x29\x04\x02\x44\x44\x64\x64\x05\x02\x22\x22\
		\x2f\x31\x61\x61\x02\u{1d9}\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\
		\x02\x02\x07\x03\x02\x02\x02\x02\x09\x03\x02\x02\x02\x02\x0b\x03\x02\x02\
		\x02\x02\x0d\x03\x02\x02\x02\x02\x0f\x03\x02\x02\x02\x02\x11\x03\x02\x02\
		\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\
		\x02\x02\x19\x03\x02\x02\x02\x02\x1b\x03\x02\x02\x02\x02\x1d\x03\x02\x02\
		\x02\x02\x1f\x03\x02\x02\x02\x02\x21\x03\x02\x02\x02\x02\x23\x03\x02\x02\
		\x02\x02\x25\x03\x02\x02\x02\x02\x27\x03\x02\x02\x02\x02\x29\x03\x02\x02\
		\x02\x02\x2b\x03\x02\x02\x02\x02\x2d\x03\x02\x02\x02\x02\x2f\x03\x02\x02\
		\x02\x02\x31\x03\x02\x02\x02\x02\x33\x03\x02\x02\x02\x02\x35\x03\x02\x02\
		\x02\x02\x37\x03\x02\x02\x02\x02\x39\x03\x02\x02\x02\x02\x51\x03\x02\x02\
		\x02\x02\x53\x03\x02\x02\x02\x02\x55\x03\x02\x02\x02\x02\x57\x03\x02\x02\
		\x02\x02\x59\x03\x02\x02\x02\x02\x5b\x03\x02\x02\x02\x02\x5d\x03\x02\x02\
		\x02\x02\x5f\x03\x02\x02\x02\x02\x61\x03\x02\x02\x02\x03\x63\x03\x02\x02\
		\x02\x05\x66\x03\x02\x02\x02\x07\x69\x03\x02\x02\x02\x09\x6c\x03\x02\x02\
		\x02\x0b\x6e\x03\x02\x02\x02\x0d\x71\x03\x02\x02\x02\x0f\x74\x03\x02\x02\
		\x02\x11\x76\x03\x02\x02\x02\x13\x79\x03\x02\x02\x02\x15\x7c\x03\x02\x02\
		\x02\x17\x7e\x03\x02\x02\x02\x19\u{80}\x03\x02\x02\x02\x1b\u{82}\x03\x02\
		\x02\x02\x1d\u{84}\x03\x02\x02\x02\x1f\u{86}\x03\x02\x02\x02\x21\u{88}\
		\x03\x02\x02\x02\x23\u{8a}\x03\x02\x02\x02\x25\u{8c}\x03\x02\x02\x02\x27\
		\u{8e}\x03\x02\x02\x02\x29\u{90}\x03\x02\x02\x02\x2b\u{92}\x03\x02\x02\
		\x02\x2d\u{94}\x03\x02\x02\x02\x2f\u{96}\x03\x02\x02\x02\x31\u{98}\x03\
		\x02\x02\x02\x33\u{9a}\x03\x02\x02\x02\x35\u{9c}\x03\x02\x02\x02\x37\u{a1}\
		\x03\x02\x02\x02\x39\u{a7}\x03\x02\x02\x02\x3b\u{ac}\x03\x02\x02\x02\x3d\
		\u{ae}\x03\x02\x02\x02\x3f\u{b0}\x03\x02\x02\x02\x41\u{b2}\x03\x02\x02\
		\x02\x43\u{bb}\x03\x02\x02\x02\x45\u{bd}\x03\x02\x02\x02\x47\u{c3}\x03\
		\x02\x02\x02\x49\u{c5}\x03\x02\x02\x02\x4b\u{c8}\x03\x02\x02\x02\x4d\u{cd}\
		\x03\x02\x02\x02\x4f\u{e4}\x03\x02\x02\x02\x51\u{e7}\x03\x02\x02\x02\x53\
		\u{ed}\x03\x02\x02\x02\x55\u{116}\x03\x02\x02\x02\x57\u{125}\x03\x02\x02\
		\x02\x59\u{138}\x03\x02\x02\x02\x5b\u{19a}\x03\x02\x02\x02\x5d\u{19c}\x03\
		\x02\x02\x02\x5f\u{1a1}\x03\x02\x02\x02\x61\u{1ab}\x03\x02\x02\x02\x63\
		\x64\x07\x3f\x02\x02\x64\x65\x07\x3f\x02\x02\x65\x04\x03\x02\x02\x02\x66\
		\x67\x07\x23\x02\x02\x67\x68\x07\x3f\x02\x02\x68\x06\x03\x02\x02\x02\x69\
		\x6a\x07\x6b\x02\x02\x6a\x6b\x07\x70\x02\x02\x6b\x08\x03\x02\x02\x02\x6c\
		\x6d\x07\x3e\x02\x02\x6d\x0a\x03\x02\x02\x02\x6e\x6f\x07\x3e\x02\x02\x6f\
		\x70\x07\x3f\x02\x02\x70\x0c\x03\x02\x02\x02\x71\x72\x07\x40\x02\x02\x72\
		\x73\x07\x3f\x02\x02\x73\x0e\x03\x02\x02\x02\x74\x75\x07\x40\x02\x02\x75\
		\x10\x03\x02\x02\x02\x76\x77\x07\x28\x02\x02\x77\x78\x07\x28\x02\x02\x78\
		\x12\x03\x02\x02\x02\x79\x7a\x07\x7e\x02\x02\x7a\x7b\x07\x7e\x02\x02\x7b\
		\x14\x03\x02\x02\x02\x7c\x7d\x07\x5d\x02\x02\x7d\x16\x03\x02\x02\x02\x7e\
		\x7f\x07\x5f\x02\x02\x7f\x18\x03\x02\x02\x02\u{80}\u{81}\x07\x7d\x02\x02\
		\u{81}\x1a\x03\x02\x02\x02\u{82}\u{83}\x07\x7f\x02\x02\u{83}\x1c\x03\x02\
		\x02\x02\u{84}\u{85}\x07\x2a\x02\x02\u{85}\x1e\x03\x02\x02\x02\u{86}\u{87}\
		\x07\x2b\x02\x02\u{87}\x20\x03\x02\x02\x02\u{88}\u{89}\x07\x30\x02\x02\
		\u{89}\x22\x03\x02\x02\x02\u{8a}\u{8b}\x07\x2e\x02\x02\u{8b}\x24\x03\x02\
		\x02\x02\u{8c}\u{8d}\x07\x2f\x02\x02\u{8d}\x26\x03\x02\x02\x02\u{8e}\u{8f}\
		\x07\x23\x02\x02\u{8f}\x28\x03\x02\x02\x02\u{90}\u{91}\x07\x41\x02\x02\
		\u{91}\x2a\x03\x02\x02\x02\u{92}\u{93}\x07\x3c\x02\x02\u{93}\x2c\x03\x02\
		\x02\x02\u{94}\u{95}\x07\x2d\x02\x02\u{95}\x2e\x03\x02\x02\x02\u{96}\u{97}\
		\x07\x2c\x02\x02\u{97}\x30\x03\x02\x02\x02\u{98}\u{99}\x07\x31\x02\x02\
		\u{99}\x32\x03\x02\x02\x02\u{9a}\u{9b}\x07\x27\x02\x02\u{9b}\x34\x03\x02\
		\x02\x02\u{9c}\u{9d}\x07\x76\x02\x02\u{9d}\u{9e}\x07\x74\x02\x02\u{9e}\
		\u{9f}\x07\x77\x02\x02\u{9f}\u{a0}\x07\x67\x02\x02\u{a0}\x36\x03\x02\x02\
		\x02\u{a1}\u{a2}\x07\x68\x02\x02\u{a2}\u{a3}\x07\x63\x02\x02\u{a3}\u{a4}\
		\x07\x6e\x02\x02\u{a4}\u{a5}\x07\x75\x02\x02\u{a5}\u{a6}\x07\x67\x02\x02\
		\u{a6}\x38\x03\x02\x02\x02\u{a7}\u{a8}\x07\x70\x02\x02\u{a8}\u{a9}\x07\
		\x77\x02\x02\u{a9}\u{aa}\x07\x6e\x02\x02\u{aa}\u{ab}\x07\x6e\x02\x02\u{ab}\
		\x3a\x03\x02\x02\x02\u{ac}\u{ad}\x07\x5e\x02\x02\u{ad}\x3c\x03\x02\x02\
		\x02\u{ae}\u{af}\x09\x02\x02\x02\u{af}\x3e\x03\x02\x02\x02\u{b0}\u{b1}\
		\x04\x32\x3b\x02\u{b1}\x40\x03\x02\x02\x02\u{b2}\u{b4}\x09\x03\x02\x02\
		\u{b3}\u{b5}\x09\x04\x02\x02\u{b4}\u{b3}\x03\x02\x02\x02\u{b4}\u{b5}\x03\
		\x02\x02\x02\u{b5}\u{b7}\x03\x02\x02\x02\u{b6}\u{b8}\x05\x3f\x20\x02\u{b7}\
		\u{b6}\x03\x02\x02\x02\u{b8}\u{b9}\x03\x02\x02\x02\u{b9}\u{b7}\x03\x02\
		\x02\x02\u{b9}\u{ba}\x03\x02\x02\x02\u{ba}\x42\x03\x02\x02\x02\u{bb}\u{bc}\
		\x09\x05\x02\x02\u{bc}\x44\x03\x02\x02\x02\u{bd}\u{be}\x09\x06\x02\x02\
		\u{be}\x46\x03\x02\x02\x02\u{bf}\u{c4}\x05\x49\x25\x02\u{c0}\u{c4}\x05\
		\x4d\x27\x02\u{c1}\u{c4}\x05\x4f\x28\x02\u{c2}\u{c4}\x05\x4b\x26\x02\u{c3}\
		\u{bf}\x03\x02\x02\x02\u{c3}\u{c0}\x03\x02\x02\x02\u{c3}\u{c1}\x03\x02\
		\x02\x02\u{c3}\u{c2}\x03\x02\x02\x02\u{c4}\x48\x03\x02\x02\x02\u{c5}\u{c6}\
		\x05\x3b\x1e\x02\u{c6}\u{c7}\x09\x07\x02\x02\u{c7}\x4a\x03\x02\x02\x02\
		\u{c8}\u{c9}\x05\x3b\x1e\x02\u{c9}\u{ca}\x04\x32\x35\x02\u{ca}\u{cb}\x04\
		\x32\x39\x02\u{cb}\u{cc}\x04\x32\x39\x02\u{cc}\x4c\x03\x02\x02\x02\u{cd}\
		\u{ce}\x05\x3b\x1e\x02\u{ce}\u{cf}\x09\x08\x02\x02\u{cf}\u{d0}\x05\x43\
		\x22\x02\u{d0}\u{d1}\x05\x43\x22\x02\u{d1}\x4e\x03\x02\x02\x02\u{d2}\u{d3}\
		\x05\x3b\x1e\x02\u{d3}\u{d4}\x07\x77\x02\x02\u{d4}\u{d5}\x05\x43\x22\x02\
		\u{d5}\u{d6}\x05\x43\x22\x02\u{d6}\u{d7}\x05\x43\x22\x02\u{d7}\u{d8}\x05\
		\x43\x22\x02\u{d8}\u{e5}\x03\x02\x02\x02\u{d9}\u{da}\x05\x3b\x1e\x02\u{da}\
		\u{db}\x07\x57\x02\x02\u{db}\u{dc}\x05\x43\x22\x02\u{dc}\u{dd}\x05\x43\
		\x22\x02\u{dd}\u{de}\x05\x43\x22\x02\u{de}\u{df}\x05\x43\x22\x02\u{df}\
		\u{e0}\x05\x43\x22\x02\u{e0}\u{e1}\x05\x43\x22\x02\u{e1}\u{e2}\x05\x43\
		\x22\x02\u{e2}\u{e3}\x05\x43\x22\x02\u{e3}\u{e5}\x03\x02\x02\x02\u{e4}\
		\u{d2}\x03\x02\x02\x02\u{e4}\u{d9}\x03\x02\x02\x02\u{e5}\x50\x03\x02\x02\
		\x02\u{e6}\u{e8}\x09\x09\x02\x02\u{e7}\u{e6}\x03\x02\x02\x02\u{e8}\u{e9}\
		\x03\x02\x02\x02\u{e9}\u{e7}\x03\x02\x02\x02\u{e9}\u{ea}\x03\x02\x02\x02\
		\u{ea}\u{eb}\x03\x02\x02\x02\u{eb}\u{ec}\x08\x29\x02\x02\u{ec}\x52\x03\
		\x02\x02\x02\u{ed}\u{ee}\x07\x31\x02\x02\u{ee}\u{ef}\x07\x31\x02\x02\u{ef}\
		\u{f3}\x03\x02\x02\x02\u{f0}\u{f2}\x0a\x0a\x02\x02\u{f1}\u{f0}\x03\x02\
		\x02\x02\u{f2}\u{f5}\x03\x02\x02\x02\u{f3}\u{f1}\x03\x02\x02\x02\u{f3}\
		\u{f4}\x03\x02\x02\x02\u{f4}\u{f6}\x03\x02\x02\x02\u{f5}\u{f3}\x03\x02\
		\x02\x02\u{f6}\u{f7}\x08\x2a\x02\x02\u{f7}\x54\x03\x02\x02\x02\u{f8}\u{fa}\
		\x05\x3f\x20\x02\u{f9}\u{f8}\x03\x02\x02\x02\u{fa}\u{fb}\x03\x02\x02\x02\
		\u{fb}\u{f9}\x03\x02\x02\x02\u{fb}\u{fc}\x03\x02\x02\x02\u{fc}\u{fd}\x03\
		\x02\x02\x02\u{fd}\u{ff}\x07\x30\x02\x02\u{fe}\u{100}\x05\x3f\x20\x02\u{ff}\
		\u{fe}\x03\x02\x02\x02\u{100}\u{101}\x03\x02\x02\x02\u{101}\u{ff}\x03\x02\
		\x02\x02\u{101}\u{102}\x03\x02\x02\x02\u{102}\u{104}\x03\x02\x02\x02\u{103}\
		\u{105}\x05\x41\x21\x02\u{104}\u{103}\x03\x02\x02\x02\u{104}\u{105}\x03\
		\x02\x02\x02\u{105}\u{117}\x03\x02\x02\x02\u{106}\u{108}\x05\x3f\x20\x02\
		\u{107}\u{106}\x03\x02\x02\x02\u{108}\u{109}\x03\x02\x02\x02\u{109}\u{107}\
		\x03\x02\x02\x02\u{109}\u{10a}\x03\x02\x02\x02\u{10a}\u{10b}\x03\x02\x02\
		\x02\u{10b}\u{10c}\x05\x41\x21\x02\u{10c}\u{117}\x03\x02\x02\x02\u{10d}\
		\u{10f}\x07\x30\x02\x02\u{10e}\u{110}\x05\x3f\x20\x02\u{10f}\u{10e}\x03\
		\x02\x02\x02\u{110}\u{111}\x03\x02\x02\x02\u{111}\u{10f}\x03\x02\x02\x02\
		\u{111}\u{112}\x03\x02\x02\x02\u{112}\u{114}\x03\x02\x02\x02\u{113}\u{115}\
		\x05\x41\x21\x02\u{114}\u{113}\x03\x02\x02\x02\u{114}\u{115}\x03\x02\x02\
		\x02\u{115}\u{117}\x03\x02\x02\x02\u{116}\u{f9}\x03\x02\x02\x02\u{116}\
		\u{107}\x03\x02\x02\x02\u{116}\u{10d}\x03\x02\x02\x02\u{117}\x56\x03\x02\
		\x02\x02\u{118}\u{11a}\x05\x3f\x20\x02\u{119}\u{118}\x03\x02\x02\x02\u{11a}\
		\u{11b}\x03\x02\x02\x02\u{11b}\u{119}\x03\x02\x02\x02\u{11b}\u{11c}\x03\
		\x02\x02\x02\u{11c}\u{126}\x03\x02\x02\x02\u{11d}\u{11e}\x07\x32\x02\x02\
		\u{11e}\u{11f}\x07\x7a\x02\x02\u{11f}\u{121}\x03\x02\x02\x02\u{120}\u{122}\
		\x05\x43\x22\x02\u{121}\u{120}\x03\x02\x02\x02\u{122}\u{123}\x03\x02\x02\
		\x02\u{123}\u{121}\x03\x02\x02\x02\u{123}\u{124}\x03\x02\x02\x02\u{124}\
		\u{126}\x03\x02\x02\x02\u{125}\u{119}\x03\x02\x02\x02\u{125}\u{11d}\x03\
		\x02\x02\x02\u{126}\x58\x03\x02\x02\x02\u{127}\u{129}\x05\x3f\x20\x02\u{128}\
		\u{127}\x03\x02\x02\x02\u{129}\u{12a}\x03\x02\x02\x02\u{12a}\u{128}\x03\
		\x02\x02\x02\u{12a}\u{12b}\x03\x02\x02\x02\u{12b}\u{12c}\x03\x02\x02\x02\
		\u{12c}\u{12d}\x09\x0b\x02\x02\u{12d}\u{139}\x03\x02\x02\x02\u{12e}\u{12f}\
		\x07\x32\x02\x02\u{12f}\u{130}\x07\x7a\x02\x02\u{130}\u{132}\x03\x02\x02\
		\x02\u{131}\u{133}\x05\x43\x22\x02\u{132}\u{131}\x03\x02\x02\x02\u{133}\
		\u{134}\x03\x02\x02\x02\u{134}\u{132}\x03\x02\x02\x02\u{134}\u{135}\x03\
		\x02\x02\x02\u{135}\u{136}\x03\x02\x02\x02\u{136}\u{137}\x09\x0b\x02\x02\
		\u{137}\u{139}\x03\x02\x02\x02\u{138}\u{128}\x03\x02\x02\x02\u{138}\u{12e}\
		\x03\x02\x02\x02\u{139}\x5a\x03\x02\x02\x02\u{13a}\u{13f}\x07\x24\x02\x02\
		\u{13b}\u{13e}\x05\x47\x24\x02\u{13c}\u{13e}\x0a\x0c\x02\x02\u{13d}\u{13b}\
		\x03\x02\x02\x02\u{13d}\u{13c}\x03\x02\x02\x02\u{13e}\u{141}\x03\x02\x02\
		\x02\u{13f}\u{13d}\x03\x02\x02\x02\u{13f}\u{140}\x03\x02\x02\x02\u{140}\
		\u{142}\x03\x02\x02\x02\u{141}\u{13f}\x03\x02\x02\x02\u{142}\u{19b}\x07\
		\x24\x02\x02\u{143}\u{148}\x07\x29\x02\x02\u{144}\u{147}\x05\x47\x24\x02\
		\u{145}\u{147}\x0a\x0d\x02\x02\u{146}\u{144}\x03\x02\x02\x02\u{146}\u{145}\
		\x03\x02\x02\x02\u{147}\u{14a}\x03\x02\x02\x02\u{148}\u{146}\x03\x02\x02\
		\x02\u{148}\u{149}\x03\x02\x02\x02\u{149}\u{14b}\x03\x02\x02\x02\u{14a}\
		\u{148}\x03\x02\x02\x02\u{14b}\u{19b}\x07\x29\x02\x02\u{14c}\u{14d}\x07\
		\x24\x02\x02\u{14d}\u{14e}\x07\x24\x02\x02\u{14e}\u{14f}\x07\x24\x02\x02\
		\u{14f}\u{154}\x03\x02\x02\x02\u{150}\u{153}\x05\x47\x24\x02\u{151}\u{153}\
		\x0a\x0e\x02\x02\u{152}\u{150}\x03\x02\x02\x02\u{152}\u{151}\x03\x02\x02\
		\x02\u{153}\u{156}\x03\x02\x02\x02\u{154}\u{155}\x03\x02\x02\x02\u{154}\
		\u{152}\x03\x02\x02\x02\u{155}\u{157}\x03\x02\x02\x02\u{156}\u{154}\x03\
		\x02\x02\x02\u{157}\u{158}\x07\x24\x02\x02\u{158}\u{159}\x07\x24\x02\x02\
		\u{159}\u{19b}\x07\x24\x02\x02\u{15a}\u{15b}\x07\x29\x02\x02\u{15b}\u{15c}\
		\x07\x29\x02\x02\u{15c}\u{15d}\x07\x29\x02\x02\u{15d}\u{162}\x03\x02\x02\
		\x02\u{15e}\u{161}\x05\x47\x24\x02\u{15f}\u{161}\x0a\x0e\x02\x02\u{160}\
		\u{15e}\x03\x02\x02\x02\u{160}\u{15f}\x03\x02\x02\x02\u{161}\u{164}\x03\
		\x02\x02\x02\u{162}\u{163}\x03\x02\x02\x02\u{162}\u{160}\x03\x02\x02\x02\
		\u{163}\u{165}\x03\x02\x02\x02\u{164}\u{162}\x03\x02\x02\x02\u{165}\u{166}\
		\x07\x29\x02\x02\u{166}\u{167}\x07\x29\x02\x02\u{167}\u{19b}\x07\x29\x02\
		\x02\u{168}\u{169}\x05\x45\x23\x02\u{169}\u{16d}\x07\x24\x02\x02\u{16a}\
		\u{16c}\x0a\x0f\x02\x02\u{16b}\u{16a}\x03\x02\x02\x02\u{16c}\u{16f}\x03\
		\x02\x02\x02\u{16d}\u{16b}\x03\x02\x02\x02\u{16d}\u{16e}\x03\x02\x02\x02\
		\u{16e}\u{170}\x03\x02\x02\x02\u{16f}\u{16d}\x03\x02\x02\x02\u{170}\u{171}\
		\x07\x24\x02\x02\u{171}\u{19b}\x03\x02\x02\x02\u{172}\u{173}\x05\x45\x23\
		\x02\u{173}\u{177}\x07\x29\x02\x02\u{174}\u{176}\x0a\x10\x02\x02\u{175}\
		\u{174}\x03\x02\x02\x02\u{176}\u{179}\x03\x02\x02\x02\u{177}\u{175}\x03\
		\x02\x02\x02\u{177}\u{178}\x03\x02\x02\x02\u{178}\u{17a}\x03\x02\x02\x02\
		\u{179}\u{177}\x03\x02\x02\x02\u{17a}\u{17b}\x07\x29\x02\x02\u{17b}\u{19b}\
		\x03\x02\x02\x02\u{17c}\u{17d}\x05\x45\x23\x02\u{17d}\u{17e}\x07\x24\x02\
		\x02\u{17e}\u{17f}\x07\x24\x02\x02\u{17f}\u{180}\x07\x24\x02\x02\u{180}\
		\u{184}\x03\x02\x02\x02\u{181}\u{183}\x0b\x02\x02\x02\u{182}\u{181}\x03\
		\x02\x02\x02\u{183}\u{186}\x03\x02\x02\x02\u{184}\u{185}\x03\x02\x02\x02\
		\u{184}\u{182}\x03\x02\x02\x02\u{185}\u{187}\x03\x02\x02\x02\u{186}\u{184}\
		\x03\x02\x02\x02\u{187}\u{188}\x07\x24\x02\x02\u{188}\u{189}\x07\x24\x02\
		\x02\u{189}\u{18a}\x07\x24\x02\x02\u{18a}\u{19b}\x03\x02\x02\x02\u{18b}\
		\u{18c}\x05\x45\x23\x02\u{18c}\u{18d}\x07\x29\x02\x02\u{18d}\u{18e}\x07\
		\x29\x02\x02\u{18e}\u{18f}\x07\x29\x02\x02\u{18f}\u{193}\x03\x02\x02\x02\
		\u{190}\u{192}\x0b\x02\x02\x02\u{191}\u{190}\x03\x02\x02\x02\u{192}\u{195}\
		\x03\x02\x02\x02\u{193}\u{194}\x03\x02\x02\x02\u{193}\u{191}\x03\x02\x02\
		\x02\u{194}\u{196}\x03\x02\x02\x02\u{195}\u{193}\x03\x02\x02\x02\u{196}\
		\u{197}\x07\x29\x02\x02\u{197}\u{198}\x07\x29\x02\x02\u{198}\u{199}\x07\
		\x29\x02\x02\u{199}\u{19b}\x03\x02\x02\x02\u{19a}\u{13a}\x03\x02\x02\x02\
		\u{19a}\u{143}\x03\x02\x02\x02\u{19a}\u{14c}\x03\x02\x02\x02\u{19a}\u{15a}\
		\x03\x02\x02\x02\u{19a}\u{168}\x03\x02\x02\x02\u{19a}\u{172}\x03\x02\x02\
		\x02\u{19a}\u{17c}\x03\x02\x02\x02\u{19a}\u{18b}\x03\x02\x02\x02\u{19b}\
		\x5c\x03\x02\x02\x02\u{19c}\u{19d}\x09\x11\x02\x02\u{19d}\u{19e}\x05\x5b\
		\x2e\x02\u{19e}\x5e\x03\x02\x02\x02\u{19f}\u{1a2}\x05\x3d\x1f\x02\u{1a0}\
		\u{1a2}\x07\x61\x02\x02\u{1a1}\u{19f}\x03\x02\x02\x02\u{1a1}\u{1a0}\x03\
		\x02\x02\x02\u{1a2}\u{1a8}\x03\x02\x02\x02\u{1a3}\u{1a7}\x05\x3d\x1f\x02\
		\u{1a4}\u{1a7}\x05\x3f\x20\x02\u{1a5}\u{1a7}\x07\x61\x02\x02\u{1a6}\u{1a3}\
		\x03\x02\x02\x02\u{1a6}\u{1a4}\x03\x02\x02\x02\u{1a6}\u{1a5}\x03\x02\x02\
		\x02\u{1a7}\u{1aa}\x03\x02\x02\x02\u{1a8}\u{1a6}\x03\x02\x02\x02\u{1a8}\
		\u{1a9}\x03\x02\x02\x02\u{1a9}\x60\x03\x02\x02\x02\u{1aa}\u{1a8}\x03\x02\
		\x02\x02\u{1ab}\u{1af}\x07\x62\x02\x02\u{1ac}\u{1b0}\x05\x3d\x1f\x02\u{1ad}\
		\u{1b0}\x05\x3f\x20\x02\u{1ae}\u{1b0}\x09\x12\x02\x02\u{1af}\u{1ac}\x03\
		\x02\x02\x02\u{1af}\u{1ad}\x03\x02\x02\x02\u{1af}\u{1ae}\x03\x02\x02\x02\
		\u{1b0}\u{1b1}\x03\x02\x02\x02\u{1b1}\u{1af}\x03\x02\x02\x02\u{1b1}\u{1b2}\
		\x03\x02\x02\x02\u{1b2}\u{1b3}\x03\x02\x02\x02\u{1b3}\u{1b4}\x07\x62\x02\
		\x02\u{1b4}\x62\x03\x02\x02\x02\x28\x02\u{b4}\u{b9}\u{c3}\u{e4}\u{e9}\u{f3}\
		\u{fb}\u{101}\u{104}\u{109}\u{111}\u{114}\u{116}\u{11b}\u{123}\u{125}\u{12a}\
		\u{134}\u{138}\u{13d}\u{13f}\u{146}\u{148}\u{152}\u{154}\u{160}\u{162}\
		\u{16d}\u{177}\u{184}\u{193}\u{19a}\u{1a1}\u{1a6}\u{1a8}\u{1af}\u{1b1}\
		\x03\x02\x03\x02";
